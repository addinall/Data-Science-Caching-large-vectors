install.packages("codetools")
install.packages("swirl")
library(swirl)
swirl()
install_from_swirl("Mathematical Biostatistics Boot Camp
")
swirl
swirl()
5 + 7
x <- 5 +7
x
y <- x - 3
y
z -> c(1.1, 9, 3.14)
z -> c(1.1, 9, 3.14)
c(1.1, 9, 3.14)
z <- c(1.1,9,3.14)
?c
z
c(z, 555, z)
z * 2 + 100
my_sqrt <- sqrt(z - q)
my_sqrt <- sqrt(z - 1)
my_sqrt
my_div <- z / my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
z * 2 + 1000
my_div
1:20
pi:10
15:1
?`:`
seq(1,20)
seq(0,10,by=0.5)
my_seq <- seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0,1,2), times = 10)
rep(c(0,1,2), each = 10)
num_vect <- c(0.5,55,-10,6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
past(my_char, collapse = " ")
paste(my_char, collapse = " ")
my_name <- c(my_char, "Addinall")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(c(1:3,c("X","Y","Z")), sep = "")
paste(1:3,c("X","Y","Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
x <- c(44, NA, 5, NA)
x <- x * 3
x * 3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y, z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0 / 0
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y > 0]
x[x > 0]
x[!is.na(x) & x > 0]
x[c(x[3], x[5], x[7])]
x[c(3,5,7)]
x
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2,10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11,2,NA)
names(vect2) <- c("foo","bar","norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
? matrix
? matrix
matrix(data = NA, nrow = 1, ncol = 1, byrow = FALSE,
matrix(data = NA, nrow = 1, ncol = 1, byrow = FALSE,
)
)
my_matrix2 <- matrix( 1:20, 4, 5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames -> c("patient","age","weight","bp","rating","test")
cnames -> c("patient","age","weight","bp","rating","test")
info()
cnames -> c("patient","age","weight","bp","rating","test")
cnames <- c("patient","age","weight","bp","rating","test")
? colnames
colnames(my_data) <- cnames
my_data
q()
summary(hw1_data$Ozone)
hw1_data <- read.csv("/var/www/datasciencecoursera/hw1_data.csv")
View(hw1_data)
summary(hw1_data$Ozone)
x <- hw1_data[!is.na(hw1_data$Ozone),]
x
summary(x)
x <- hw1_data[(hw1_data$Ozone > 31) & (hw1_data$Temp > 90),]
x
summary(x)
x <- hw1_data[(hw1_data$Month == 6),]
x
summary(x)
x <- hw1_data[(hw1_data$Month == 5),]
summary(x)
find_rtools()
library(devtools)
install.package(devtools)
install.packages(devtools)
find.package("devtools")
find.package("KernSmooth")
install.packages("KernSmooth")
KernSmooth()
library("KernSmooth")
clear()
q()
cube <- function(x, n) {}
x^3
}
cube(3)
cube <- function(x,n) {}
x^3
rm(x, y)
cube <- function(x,n) {}
cube <- function(x,n) { x^ 3}
cube(3)
rm(x, y)
x <- 1:10
x
if (x > 5) { x <- 0 }
rm(x, y)
f <- function(x) { g <- function(y) { y + z } z <- 4 x +g(x)}
f <- function(x) { g <- function(y) { y + z } z <- 4 x +g(x)}
setwd("/var/www/datasciencecoursera")
x <- x^y
power(3,4)
power(3)
x <- c(1,2,4)
q <- c(x,x,8)
x
q
mean(x)
sd(x)
y <- mean(x)
y
data()
mean(Nile)
sd(Nile)
hist(Nile)
hist(Nile)
q()
x <- matrix(1:4,2,2)
x
y <- matrix(rep(10, 4), 2, 2)
y
x + y
x * y
x %*% y
unclass(as.date("2014-08-05"))
unclass(as.Date("2014-08-05"))
x <- Sys.time()
x
p <- as.POSIXlt(x)
p
names(unclass(p))
p$gmtoff
p$wday
library(datasets)
data(iris)
?iris
names <- dimnames(iris)
names
head(iris)
iris[1:50]
iris[Species == "virginica"]
iris[,5]
class(iris)
colMeans(iris)
iris$Species.1
iris$Species
iris$Species == "virginica"
x <- iris$Sepal.Length[iris$Species == "virginica"]
x
x <- mean(iris$Sepal.Length[iris$Species == "virginica"])
x
apply(iris, 1, mean)
warnings()
apply(iris, 2, mean)
colMeans(iris)
apply(iris[, 1:4], 2, mean)
library(datasets)
data(mtcars)
?mtcars
sapply(split(mtcars$mpg, mtcars$cyl), mean)
sapply(mtcars, cyl, mean)
apply(mtcars, 2, mean)
mean(mtcars$mpg, mtcars$cyl)
sapply(split(mtcars$hp, mtcars$cyl), mean)
abs(82.63636)
209.21429 - 82.63636
debug(ls)
ls()
library(swirl)
swirl()
library(swirl)
swirl()
swirl()
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_matrix
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20, nrow = 4, ncol = 5)
identical(my_matrix, my_matrix2)
q()
setwd("/var/www/datasciencecoursera/ProgrammingAssignment3")
source("rankhospital.R")
r <- rankhospital("WA", "heart attack", 7)
print(r)
source("rankhospital.R")
r <- rankhospital("WA", "heart attack", 7)
print(r)
source("rankhospital.R")
r <- rankhospital("WA", "heart attack", 7)
r
source("rankhospital.R")
r <- rankhospital("WA", "heart attack", 7)
r
source("rankhospital.R")
r <- rankhospital("WA", "heart attack", 7)
r
source("rankhospital.R")
r <- rankhospital("WA", "heart attack", 7)
r <- rankhospital("WA", "heart attack", 7)
outcome_data <- read.csv('data/outcome-of-care-measures.csv',
stringsAsFactors = FALSE)
outcome_data
outcome_data[1,]
source("rankhospital.R")
r <- rankhospital("WA", "heart attack", 7)
source("rankhospital.R")
r <- rankhospital("WA", "heart attack", 7)
r
source("rankhospital.R")
r <- rankhospital("WA", "heart attack", 7)
outcome_data[1,]
r
source("rankhospital.R")
r <- rankhospital("WA", "heart attack", 7)
r
r <- rankhospital("WA", "heart attack", "best")
t
r
source("rankhospital.R")
r <- rankhospital("WA", "heart attack", 7)
r
r <- rankhospital("WA", "heart attack", "best")
r
r <- rankhospital("TX", "heart attack", "best")
r
r <- rankhospital("TX", "heart attack", "worst")
r
source("rankhospital.R")
r <- rankhospital("TX", "heart attack", "best")
source("rankhospital.R")
r <- rankhospital("TX", "heart attack", "best")
class(r)
length(r)
r <- rankhospital("TX", "heart failure", "best")
submit()
dir()
source("submitscript3.R")
submit()
2
submit()
submit()
source("rankhospital.R")
submit()
source("rankhospital.R")
submit()
source("rankhospital.R")
submit()
5
submit()
submit()
submit()
submit()
source("rankhospital.R")
rankhospital("NC", "heart attack", "worst")
rankhospital("NC", "heart attack", 50
)
rankhospital("NC", "heart attack", 5000)
source("rankhospital.R")
rankhospital("NC", "heart attack", "worst")
source("rankhospital.R")
rankhospital("NC", "heart attack", "worst")
source("rankhospital.R")
rankhospital("NC", "heart attack", "worst")
submit()
source("rankall.R")
t <- rankall("heart attack", "best")
source("rankall.R")
t <- rankall("heart attack", "best")
source("rankall.R")
t <- rankall("heart attack", "best")
t <- rankall("heart attack", 12)
t <- rankhospital("TX", "heart attack", "best")
t
class(t)
length(t)
source("rankall.R")
source("rankall.R")
t <- rankall("heart attack", 2)
t
class(t)
source("rankall.R")
t <- rankall("heart attack", 2)
t
class(t)
submit()
submit()
submit()
t
submit()
source("rankall.R")
submit()
submit()
submit()
submit()
t
source("rankall.R")
t <- rankall("heart failure", 10)
t
tail(rankall("heart failure"), 10)
tail(rankall("pneumonia", "worst"),3)
source("rankall.R")
tail(rankall("pneumonia", "worst"),3)
tail(rankall("heart failure"), 10)
rankhospital("TX", "heart failure", "worst")
tail(rankall("pneumonia", "worst"), 3)
source("rankall.R")
tail(rankall("pneumonia", "worst"), 3)
source("rankall.R")
tail(rankall("pneumonia", "worst"), 3)
source("rankall.R")
tail(rankall("pneumonia", "worst"), 3)
source("rankall.R")
tail(rankall("pneumonia", "worst"), 3)
source("rankall.R")
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"), 10)
submit()
t
source("rankall.R")
t <- rankall("heart failure")
t
t <- rankall("heart attack", 20, 10)
t <- rankall("heart attack", 20)
head(t,10)
submit()
t
head(t,10)
source("rankall.R")
t <- rankall("heart failure", "best")
t
t
t <- rankall("heart failure", 1)
t
rankhospital("TX","heart failure",4)
rankhospital("MD","heart attack","worst")
rankhospital("TX","heart failure")
rankhospital("TX","heart attack")
source("rankall.R")
rankhospital("TX","heart failure",4)
source("rankhospital.R")
rankhospital("TX","heart failure",4)
tail(rankall("heart failure"), 10)
submit()
setwd("/var/www/datasciencecoursera/ProgrammingAssignment2")
source("cachematrix.R")
global
global.gsolve()
global$gsolve()
testit <- function(x)
{
p1 <- proc.time()
Sys.sleep(x)
proc.time() - p1 # The cpu usage should be negligible
}
testit(3.7)
source("cachematrix.R")
source("cachematrix.R")
source("cachematrix.R")
source("cachematrix.R")
source("cachematrix.R")
source("cachematrix.R")
quit()
source("cachematrix.R")
global
external_solved_matrix
source("cachematrix.R")
external_solved_matrix
source("cachematrix.R")
external_solved_matrix
source("cachematrix.R")
source("cachematrix.R")
source("cachematrix.R")
source("cachematrix.R")
